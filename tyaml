#!/bin/bash

function tyaml_parser
{
   local prefix=$2
   local s='[[:space:]]*' w='[a-zA-Z0-9_ -\"]*' fs=$(echo @|tr @ '\034')
   sed -ne "s|^\($s\):|\1|" \
        -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
   awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])(".")}
         printf("%s%s%s:%s\n", "'$prefix'",vn, $2, $3);
      }
   }'
}

get_value()
{
   local file=$1
   local path=$2
   tyaml_parser $file | awk -F : '/'$path'/{print $2}'
}

get_keys()
{
   local file=$1
   local path=$2
   if [ -z "$path" ]; then
      tyaml_parser $file | awk -F. '{print $1}' | awk '!seen[$1]++'
   else
      tyaml_parser $file | awk '/^'$path'/{print $0}' | awk -F "$path". '{print $2}' | awk -F . '{print $0}' | awk -F : '{print $1}'
   fi
}

usage()
{
   echo -e "\033[1musage:\033[0m"
   echo -e "tyaml FILE [-k] [-v] argument"
   echo -e "\033[1moptions:\033[0m"
   echo -e "\033[1m-k:\033[0m get yaml keys"
   echo -e "\033[1m-v: get yaml values"
   echo -e "\033[1mexample:\033[0m"
   echo -e "\033[1m$\033[0m tyaml file.yaml -k option1.values"
}

if [ -n "$2" ]; then
   case "$2" in
      "-v")
         get_value $1 $3
         ;;
      "-k")
         get_keys $1 $3
         ;;
      "-h" | *)
         usage
         exit 0
         ;;
   esac
else
   tyaml_parser $1
fi
