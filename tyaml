#!/bin/bash

list_all_paths()
{
   local prefix=$2
   local s='[[:space:]]*' w='[a-zA-Z0-9_ -\"]*' fs=$(echo @|tr @ '\034')
   sed -ne "s|^\($s\):|\1|" \
        -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
   awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])(".")}
         printf("%s%s%s:%s\n", "'$prefix'",vn, $2, $3);
      }
   }'
}

list_matched_paths()
{
   awk '/^'$1'/{print $0}' 
}

remove_parent_path()
{
   awk -F "$1". '{print $2}'
}

remove_value()
{
   awk -F : '{print $1}'
}

get_matched_path()
{
   awk '/^'$1':/{print $0}'
}

get_first_key()
{
   awk -F . '{print $1}'
}

get_value()
{
   local file=$1
   local path=$2
   list_all_paths $file | get_matched_path $path | remove_parent_path $path | xargs
}

list_keys()
{
   local file=$1
   local path=$2
   local keys
   if [ -z "$path" ]; then
      keys=$(list_all_paths $file | remove_value | get_first_key)
   else
      keys=$(list_all_paths $file | remove_value | list_matched_paths $path | remove_parent_path $path | get_first_key)
   fi
   echo -e "$keys" | awk '!seen[$1]++'
}

usage()
{
   echo -e "\033[1musage:\033[0m"
   echo -e "tyaml FILE [-k] [-v] argument"
   echo -e "\033[1moptions:\033[0m"
   echo -e "\033[1m-k:\033[0m get yaml keys"
   echo -e "\033[1m-v: get yaml values"
   echo -e "\033[1mexample:\033[0m"
   echo -e "\033[1m$\033[0m tyaml file.yaml -k option1.values"
   exit 0
}


if [ -f "$1" ]; then
   if [ -n "$2" ]; then
      case "$2" in
         "-v")
            get_value $1 $3
            ;;
         "-k")
            list_keys $1 $3
            ;;
         *)
            usage
            ;;
      esac
   else
      list_all_paths $1
   fi
else
   case "$1" in
      "-h")
         usage
         ;;
      *)
         echo "file not declared";;
   esac
fi
